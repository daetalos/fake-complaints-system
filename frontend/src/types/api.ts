/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/complaint-categories/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Complaint Categories
         * @description Retrieves all complaint categories, grouped by main category.
         */
        get: operations["get_complaint_categories_api_complaint_categories__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/complainants/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Complainant
         * @description Creates a new complainant with address information.
         */
        post: operations["create_complainant_api_complainants__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/complainants/{complainant_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Complainant
         * @description Retrieves a complainant by ID including address information.
         */
        get: operations["get_complainant_api_complainants__complainant_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/complainants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Complainants
         * @description Lists complainants, optionally filtered by name or email.
         */
        get: operations["list_complainants_api_complainants_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/complaints/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Complaint
         * @description Creates a new complaint.
         */
        post: operations["create_complaint_api_complaints__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/complaints/{complaint_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Complaint */
        get: operations["get_complaint_api_complaints__complaint_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/patients-test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Patients Test
         * @description Simple test endpoint to debug the issue
         */
        get: operations["list_patients_test_api_patients_test_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/patients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Patients */
        get: operations["list_patients_api_patients_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Cases
         * @description Get all cases, optionally filtered by patient_id
         */
        get: operations["list_cases_api_cases_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Health Check
         * @description Simple health check endpoint to confirm the API is running.
         */
        get: operations["health_check_api_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Root */
        get: operations["read_root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** CaseSummary */
        CaseSummary: {
            /**
             * Case Id
             * Format: uuid
             */
            case_id: string;
            /** Case Reference */
            case_reference: string;
            /**
             * Patient Id
             * Format: uuid
             */
            patient_id: string;
        };
        /** Complainant */
        Complainant: {
            /** Name */
            name: string;
            /** Email */
            email: string;
            /** Phone */
            phone?: string | null;
            /** Address Line1 */
            address_line1: string;
            /** Address Line2 */
            address_line2?: string | null;
            /** City */
            city: string;
            /** Postcode */
            postcode: string;
            /**
             * Complainant Id
             * Format: uuid
             */
            complainant_id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** ComplainantCreate */
        ComplainantCreate: {
            /** Name */
            name: string;
            /** Email */
            email: string;
            /** Phone */
            phone?: string | null;
            /** Address Line1 */
            address_line1: string;
            /** Address Line2 */
            address_line2?: string | null;
            /** City */
            city: string;
            /** Postcode */
            postcode: string;
        };
        /** ComplainantSummary */
        ComplainantSummary: {
            /**
             * Complainant Id
             * Format: uuid
             */
            complainant_id: string;
            /** Name */
            name: string;
            /** Email */
            email: string;
            /** Address Line1 */
            address_line1: string;
            /** Address Line2 */
            address_line2: string | null;
            /** City */
            city: string;
            /** Postcode */
            postcode: string;
        };
        /** Complaint */
        Complaint: {
            /** Description */
            description: string;
            /**
             * Complaint Id
             * Format: uuid
             */
            complaint_id: string;
            /**
             * Category Id
             * Format: uuid
             */
            category_id: string;
            /**
             * Complainant Id
             * Format: uuid
             */
            complainant_id: string;
            /**
             * Patient Id
             * Format: uuid
             */
            patient_id: string;
            /**
             * Case Id
             * Format: uuid
             */
            case_id: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
            complainant: components["schemas"]["ComplainantSummary"];
            patient: components["schemas"]["PatientSummary"];
            case: components["schemas"]["CaseSummary"];
        };
        /** ComplaintCategory */
        ComplaintCategory: {
            /** Main Category */
            main_category: string;
            /** Sub Categories */
            sub_categories: components["schemas"]["SubCategory"][];
        };
        /** ComplaintCreate */
        ComplaintCreate: {
            /** Description */
            description: string;
            /**
             * Category Id
             * Format: uuid
             */
            category_id: string;
            /**
             * Complainant Id
             * Format: uuid
             */
            complainant_id: string;
            /**
             * Patient Id
             * Format: uuid
             */
            patient_id: string;
            /**
             * Case Id
             * Format: uuid
             */
            case_id: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** PatientSummary */
        PatientSummary: {
            /**
             * Patient Id
             * Format: uuid
             */
            patient_id: string;
            /** Name */
            name: string;
            /**
             * Dob
             * Format: date-time
             */
            dob: string;
        };
        /** SubCategory */
        SubCategory: {
            /**
             * Category Id
             * Format: uuid
             */
            category_id: string;
            /** Sub Category */
            sub_category: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_complaint_categories_api_complaint_categories__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ComplaintCategory"][];
                };
            };
        };
    };
    create_complainant_api_complainants__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ComplainantCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Complainant"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_complainant_api_complainants__complainant_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                complainant_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Complainant"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_complainants_api_complainants_get: {
        parameters: {
            query?: {
                q?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ComplainantSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_complaint_api_complaints__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ComplaintCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Complaint"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_complaint_api_complaints__complaint_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                complaint_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Complaint"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_patients_test_api_patients_test_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_patients_api_patients_get: {
        parameters: {
            query?: {
                q?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PatientSummary"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_cases_api_cases_get: {
        parameters: {
            query?: {
                patient_id?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    health_check_api_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    read_root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
