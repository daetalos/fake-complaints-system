[tool.poetry]
name = "test-spectrum-system"
version = "0.1.0"
description = "Backend for the Test Spectrum System."
authors = ["Mark O'Brien <markmikeobrien@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = "^0.29.0"
loguru = "^0.7.2"
sqlalchemy = "^2.0.30"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
pydantic-settings = "^2.2.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
black = "^24.4.2"
flake8 = "^7.0.0"
mypy = "^1.10.0"
ruff = "^0.12.0"
pre-commit = "^4.2.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-mock = "^3.14.1"
pytest-asyncio = "^1.0.0"
pytest-xdist = "^3.7.0"
pytest-sugar = "^1.0.0"
pytest-clarity = "^1.0.1"
factory-boy = "^3.3.3"
faker = "^37.4.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Set a comfortable line length. This is shared by the linter and formatter.
line-length = 88
# Exclude directories from all checks.
extend-exclude = ["docs"]
# Allow ruff to automatically fix issues.
fix = true

[tool.ruff.lint]
# Select the rule sets to use.
# E = pycodestyle errors
# W = pycodestyle warnings
# F = Pyflakes
# I = isort
select = ["E", "W", "F", "I"]

[tool.ruff.format]
# Use black-compatible formatting.
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/test_spectrum_system",
    "--cov-report=html",
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=50",
    "--no-cov-on-fail",
]
testpaths = ["src/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore:Please use `import python_multipart` instead.:PendingDeprecationWarning",
    "ignore::DeprecationWarning",
]
pythonpath = ["src"]
